//Make the form listen to the submit event generated by the submit button
document.getElementById('issueForm').addEventListener('submit', saveIssue);

//SAVE ISSUE METHOD
function saveIssue(e){
	//retrieving field values
	var issueDescription = document.getElementById("issueDescription").value;
	var issueSeverity = document.getElementById("issueSeverity").value;
	var issueAssignTo = document.getElementById("issueAssignTo").value;
	var issueId = chance.guid();
	var issueStatus = 'Open';

	// Object creation
	var issue = {
		id: issueId,
		description: issueDescription,
		severity: issueSeverity,
		assignedTo: issueAssignTo,
		status: issueStatus
	};
	// Inserting item in localStorage
	if (localStorage.getItem('issues') == null) {
		var issues = [];
		issues.push(issue);
		localStorage.setItem('issues', JSON.stringify(issues));
	} else {
		var issues = JSON.parse(localStorage.getItem('issues'));
		issues.push(issue);
		localStorage.setItem('issues', JSON.stringify(issues));
	}

	//reset form fields
	document.getElementById('issueForm').reset();

	//update list of issues
	fetchIssues();

	//prevent form from submitting
	e.preventDefault();
}

//CLOSE STATUS METHOD
function setStatusClosed(id){
	var issues = JSON.parse(localStorage.getItem('issues'));

	//Look for the issue with the same ID as inputed ID
	for(var i = 0; i < issues.length; i++){
		if(issues[i].id === id){
			issues[i].status = "Closed";
		}
	}

	//Save the new array to localStorage again
	localStorage.setItem('issues', JSON.stringify(issues));

	fetchIssues();
}

//DELETE ISSUE METHOD
function deleteIssue(id){
	var issues = JSON.parse(localStorage.getItem('issues'));

	//Look for the issue with the same ID as inputed ID
	for(var i = 0; i < issues.length; i++){
		if(issues[i].id === id){
			issues.splice(i, 1);
		}
	}
	//Save the new array to localStorage again
	localStorage.setItem('issues', JSON.stringify(issues));

	fetchIssues();
}

function fetchIssues(){
	var issues = JSON.parse(localStorage.getItem('issues'));
	var issuesList = document.getElementById("issuesList");

	issuesList.innerHTML = '';

	//Iterate through the localStorage array of Issues to create HTML elements for them
	for(var i = 0; i < issues.length; i++){
		var id = issues[i].id;
		var description = issues[i].description;
		var severity = issues[i].severity;
		var assignedTo = issues[i].assignedTo;
		var status = issues[i].status;

		issuesList.innerHTML += '<div class="card">'+
									'<div class="card-block">'+
										'<h6>Issue ID: '+ id +'</h6>' +
										'<p><span class="badge badge-primary">'+ status +'</span></p>'+
										'<h3>'+ description +'</h3>'+
										'<p><span class="badge badge-danger">'+ severity +' priority</span> <span class="badge badge-info">'+ assignedTo +'</span></p>'+
										'<a href="" onclick="setStatusClosed(\''+ id +'\')" class="btn btn-warning">Close</a>'+
										'<a href="" onclick="deleteIssue(\''+ id +'\')" class="btn btn-danger">Delete</a>'+
									'</div>'+
								'</div>'

	}
}